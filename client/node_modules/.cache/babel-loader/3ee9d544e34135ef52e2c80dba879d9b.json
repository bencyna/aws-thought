{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benja\\\\OneDrive\\\\Desktop\\\\Code\\\\aws-thought\\\\client\\\\src\\\\components\\\\ThoughtForm\\\\index.js\";\nimport React, { useRef, useState } from \"react\";\n\nconst ThoughtForm = () => {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    thought: \"\"\n  });\n  const [characterCount, setCharacterCount] = useState(0);\n  const fileInput = useRef(null); // update state based on form input changes\n\n  const handleChange = event => {\n    if (event.target.value.length <= 280) {\n      setFormState({ ...formState,\n        [event.target.name]: event.target.value\n      });\n      setCharacterCount(event.target.value.length);\n    }\n  };\n\n  const handleImageUpload = event => {\n    event.preventDefault();\n    const data = new FormData();\n    data.append(\"image\", fileInput.current.files[0]);\n\n    const postImage = async () => {\n      try {\n        console.log(\"try\");\n        const res = await fetch(\"/api/image-upload\", {\n          mode: \"cors\",\n          method: \"POST\",\n          body: data\n        });\n        console.log(\"hi\");\n        if (!res.ok) throw new Error(res.statusText);\n        const postResponse = await res.json();\n        setFormState({ ...formState,\n          image: postResponse.Location\n        });\n        console.log(\"postImage: \", postResponse.Location);\n        return postResponse.Location;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    postImage();\n  }; // submit form\n\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    const postData = async () => {\n      const res = await fetch(\"/api/users\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formState)\n      });\n      const data = await res.json();\n      console.log(data);\n    };\n\n    postData(); // clear form value\n\n    setFormState({\n      username: \"\",\n      thought: \"\"\n    });\n    setCharacterCount(0);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: `m-0 ${characterCount === 280 ? \"text-error\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Character Count: \", characterCount, \"/280\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"flex-row justify-center justify-space-between-md align-stretch\",\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Name\",\n    name: \"username\",\n    value: formState.username,\n    className: \"form-input col-12 \",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Here's a new thought...\",\n    name: \"thought\",\n    value: formState.thought,\n    className: \"form-input col-12 \",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-input col-12  p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Add an image to your thought:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    ref: fileInput,\n    className: \"form-input p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: handleImageUpload,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Upload\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn col-12 \",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n};\n\nexport default ThoughtForm;","map":{"version":3,"sources":["C:/Users/benja/OneDrive/Desktop/Code/aws-thought/client/src/components/ThoughtForm/index.js"],"names":["React","useRef","useState","ThoughtForm","formState","setFormState","username","thought","characterCount","setCharacterCount","fileInput","handleChange","event","target","value","length","name","handleImageUpload","preventDefault","data","FormData","append","current","files","postImage","console","log","res","fetch","mode","method","body","ok","Error","statusText","postResponse","json","image","Location","error","handleFormSubmit","postData","headers","Accept","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\n\nconst ThoughtForm = () => {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    thought: \"\",\n  });\n  const [characterCount, setCharacterCount] = useState(0);\n  const fileInput = useRef(null);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    if (event.target.value.length <= 280) {\n      setFormState({ ...formState, [event.target.name]: event.target.value });\n      setCharacterCount(event.target.value.length);\n    }\n  };\n\n  const handleImageUpload = (event) => {\n    event.preventDefault();\n    const data = new FormData();\n    data.append(\"image\", fileInput.current.files[0]);\n    const postImage = async () => {\n      try {\n        console.log(\"try\");\n        const res = await fetch(\"/api/image-upload\", {\n          mode: \"cors\",\n          method: \"POST\",\n          body: data,\n        });\n        console.log(\"hi\");\n        if (!res.ok) throw new Error(res.statusText);\n        const postResponse = await res.json();\n        setFormState({ ...formState, image: postResponse.Location });\n        console.log(\"postImage: \", postResponse.Location);\n        return postResponse.Location;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    postImage();\n  };\n\n  // submit form\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    const postData = async () => {\n      const res = await fetch(\"/api/users\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(formState),\n      });\n      const data = await res.json();\n      console.log(data);\n    };\n    postData();\n    // clear form value\n    setFormState({ username: \"\", thought: \"\" });\n    setCharacterCount(0);\n  };\n\n  return (\n    <div>\n      <p className={`m-0 ${characterCount === 280 ? \"text-error\" : \"\"}`}>\n        Character Count: {characterCount}/280\n      </p>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-stretch\"\n        onSubmit={handleFormSubmit}\n      >\n        <input\n          placeholder=\"Name\"\n          name=\"username\"\n          value={formState.username}\n          className=\"form-input col-12 \"\n          onChange={handleChange}\n        ></input>\n        <textarea\n          placeholder=\"Here's a new thought...\"\n          name=\"thought\"\n          value={formState.thought}\n          className=\"form-input col-12 \"\n          onChange={handleChange}\n        ></textarea>\n        <label className=\"form-input col-12  p-1\">\n          Add an image to your thought:\n          <input type=\"file\" ref={fileInput} className=\"form-input p-2\" />\n          <button className=\"btn\" onClick={handleImageUpload} type=\"submit\">\n            Upload\n          </button>\n        </label>\n        <button className=\"btn col-12 \" type=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n"]},"metadata":{},"sourceType":"module"}